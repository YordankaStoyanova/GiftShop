@using BusinessLayer
@using Newtonsoft.Json
@model BusinessLayer.Order
@{
    ViewData["Title"] = "Check out";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>

        .checkout-container {
            margin: 0 2.5rem;
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
        }

        .checkout-form {
            flex: 1;
            min-width: 300px;
            background: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .order-summary {
            flex: 1;
            min-width: 300px;
            background: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        h1, h2 {
            color: #2c3e50;
            margin-top: 0;
        }

        .form-group {
            margin-bottom: 20px;
        }

        #hiddenForm {
            display: none;
        }


        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
        }

        input, select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }

        .row {
            display: flex;
            gap: 15px;
        }

            .row .form-group {
                flex: 1;
            }

        .btn {
            background: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            font-size: 16px;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            transition: background 0.3s;
        }

            .btn:hover {
                background: #2980b9;
            }

        .order-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .order-total {
            font-size: 18px;
            font-weight: bold;
            margin-top: 20px;
            padding-top: 10px;
            border-top: 2px solid #eee;
            display: flex;
            justify-content: space-between;
        }

        .payment-methods {
            margin: 20px 0;
        }

        .payment-option {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

            .payment-option input {
                width: auto;
                margin-right: 10px;
            }

        .secure-checkout {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 20px;
            color: #27ae60;
            font-weight: bold;
        }

            .secure-checkout svg {
                margin-right: 8px;
            }
    </style>
</head>
<body>
    <h1 style="margin-left:2.5rem">Checkout</h1>

    <div class="checkout-container">

        <section class="checkout-form">
            <h2>Shipping Information</h2>

            <form id="checkoutForm">
                <div class="row">
                    <div class="form-group">
                        <label for="firstName">First Name</label>
                        <input type="text" id="firstName" required>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name</label>
                        <input type="text" id="lastName" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="address">Address</label>
                    <input type="text" id="address" required>
                </div>

                <div class="form-group">
                    <label for="address2">Apartment, suite, etc. (optional)</label>
                    <input type="text" id="address2">
                </div>

                <div class="row">
                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" id="city" required>
                    </div>
                    <div class="form-group">
                        <label for="state">State/Province</label>
                        <select id="state" required>
                            <option value="">Select...</option>
                            <option value="CA">California</option>
                            <option value="NY">New York</option>
                            <!-- More states -->
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="zip">ZIP/Postal Code</label>
                        <input type="text" id="zip" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="country">Country</label>
                    <select id="country" required>
                        <option value="US">United States</option>
                        <option value="CA">Canada</option>
                        <option value="UK">United Kingdom</option>
                        <!-- More countries -->
                    </select>
                </div>

                <div class="form-group">
                    <label for="phone">Phone</label>
                    <input type="tel" id="phone" required>
                </div>

                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" required>
                </div>

                <h2>Payment Method</h2>

                <div class="payment-methods">
                    <div class="payment-option">
                        <input type="radio" id="onhand" name="payment" value="onhand">
                        <label style="margin-top:10px" for="onhand">Cash on Delivery</label>
                    </div>
                </div>

                <button type="submit" class="btn">Complete Order</button>

                <div class="secure-checkout">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="#27ae60">
                        <path d="M12 1L3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5l-9-4zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11V11.99z" />
                    </svg>
                    Secure Checkout
                </div>
            </form>
        </section>

        <section class="order-summary">
            <h2>Your Order</h2>

            <div class="order-item">
                <span>Product Name x 1</span>
                <span>$29.99</span>
            </div>

            <div class="order-item">
                <span>Product Name x 2</span>
                <span>$59.98</span>
            </div>

            <div class="order-item">
                <span>Subtotal</span>
                <span>$89.97</span>
            </div>

            <div class="order-item">
                <span>Shipping</span>
                <span>Free</span>
            </div>

            <div class="order-item">
                <span>Tax</span>
                <span>$7.20</span>
            </div>

            <div class="order-total">
                <span>Total</span>
                <span>$97.17</span>
            </div>

            <div style="margin-top: 30px;">
                <h3>Return Policy</h3>
                <p>We offer a 30-day return policy. If you're not satisfied with your purchase, you can return it for a full refund.</p>
            </div>
        </section>
        @using (Html.BeginForm("Checkout", "OrdersController", FormMethod.Post, new { id = "hiddenForm" }))
        {
            @Html.Hidden("products", Model.Products)
            @Html.Hidden("PhoneNumber", Model.PhoneNumber, new { id ="phonenumber"})
            @Html.Hidden("Address", Model.Address, new { id = "address" })
        }

    </div>

    <script>
        // Simple JavaScript to toggle payment fields
        document.querySelectorAll('input[name="payment"]').forEach(radio => {
            radio.addEventListener('change', function() {
                const creditCardFields = document.getElementById('creditCardFields');
                if (this.value === 'credit') {
                    creditCardFields.style.display = 'block';
                } else {
                    creditCardFields.style.display = 'none';
                }
            });
        });

        // Form submission
        document.getElementById('checkoutForm').addEventListener('submit', function(e) {
            e.preventDefault();
            document.getElementById("phonenumber").value = document.getElementById("phone");
            document.getElementById("address").value = document.getElementById("phone");

            // Here you would typically process the form data
            // window.location.href = 'order-confirmation.html';
        });
    </script>

    <script>
        document.getElementById("submitButton").addEventListener("click",()=>{
            document.getElementById("form").submit();
        })
        const basket = sessionStorage.getItem("basket");
        if(basket){
            const object = JSON.parse(basket);
            fetch("../Products/GetAllById",{
                method:"Post",
                headers:{
                    'Content-Type': 'application/json'
                },
                body:JSON.stringify(object.map(r=>r.id))
            }).then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json(); // parse the JSON body
            })
            .then(data => {
                const stringObject = JSON.stringify(data);
                document.getElementById("productsString").value = stringObject;

            })
            .catch(error => {
                console.error("Fetch error:", error);
            });
        }

    </script>
</body>
</html>

@section Scripts {
    @{
                await Html.RenderPartialAsync("_ValidationScriptsPartial");

}
}

