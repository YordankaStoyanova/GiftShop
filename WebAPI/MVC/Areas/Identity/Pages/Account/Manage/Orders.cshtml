@page
@model OrdersModel
@{
    ViewData["Title"] = "All Orders";
    ViewData["ActivePage"] = ManageNavPages.Orders;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        .item-count {
            margin-right: -0.5rem !important;
        }

        /* Account Dashboard */
        .account-dashboard {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            padding: 40px 0;
        }

        /* Main Content Area */
        .account-content {
            flex: 1;
            min-width: 300px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            padding: 30px;
        }

        .account-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .account-header h2 {
            color: #e63946;
        }

        /* Order Filters */
        .order-filters {
            display: flex;
            gap: 15px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .filter-btn {
            padding: 8px 15px;
            border-radius: 20px;
            border: 1px solid #ddd;
            background: white;
            cursor: pointer;
            transition: all 0.3s;
        }

        .filter-btn:hover {
            background: #f1f1f1;
        }

        .filter-btn.active {
            background: #e63946;
            color: white;
            border-color: #e63946;
        }

        .order-count {
            color: #666;
            font-size: 0.9em;
            margin-left: 10px;
        }

        /* Order Cards - same as before */
        .order-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            transition: box-shadow 0.3s;
        }

        .order-card:hover {
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
        }

        .order-id {
            font-weight: bold;
        }

        .order-date {
            color: #666;
        }

        .order-status {
            display: inline-block;
            padding: 3px 10px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: bold;
        }

        .status-inprogress {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-confirmed {
            background-color: #cce5ff;
            color: #004085;
        }

        .status-canceled {
            background-color: #f8d7da;
            color: #721c24;
        }

        .status-delivered {
            background-color: #d4edda;
            color: #155724;
        }

        .order-details {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 15px;
        }

        .order-items {
            flex: 1;
            min-width: 200px;
        }

        .order-item {
            display: flex;
            margin-bottom: 15px;
        }

        .order-item-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 4px;
            margin-right: 15px;
        }

        .order-summary {
            flex: 0 0 200px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
        }

        .order-actions {
            margin-top: 20px;
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 8px 15px;
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s;
        }

        .btn-primary {
            background-color: #e63946;
            color: white;
        }

        .btn-primary:hover {
            background-color: #c1121f;
        }

        .btn-secondary {
            background-color: #f1faee;
            color: #333;
        }

        .btn-secondary:hover {
            background-color: #e2e8e0;
        }

        .no-orders {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        .no-orders i {
            font-size: 40px;
            margin-bottom: 20px;
            color: #ddd;
        }

        @@media (max-width: 768px) {
            .account-dashboard {
                flex-direction: column;
            }

            .order-header {
                flex-direction: column;
                gap: 10px;
            }

            .order-actions {
                flex-wrap: wrap;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>

<div class="container">
    <div class="account-dashboard">
        <!-- Main Content Area -->
        <main class="account-content">
            <div class="account-header">
                <h2>Order History</h2>
                <div>Total orders: <strong>@Model.Data.TotalOrders</strong></div>
            </div>

            <!-- Order Filters -->
            <div class="order-filters">
                <button class="filter-btn @(Model.Data.SelectedStatus == default ? "active" : "")"
                        onclick="window.location.href='?status='">All
                </button>
                <button class="filter-btn @(Model.Data.SelectedStatus == Status.InProgress ? "active" : "")"
                        onclick="window.location.href='?status=InProgress'">In Progress
                </button>
                <button class="filter-btn @(Model.Data.SelectedStatus == Status.Confirmed ? "active" : "")"
                        onclick="window.location.href='?status=Confirmed'">Confirmed
                </button>
                <button class="filter-btn @(Model.Data.SelectedStatus == Status.Delivered ? "active" : "")"
                        onclick="window.location.href='?status=Delivered'">Delivered
                </button>
                <button class="filter-btn @(Model.Data.SelectedStatus == Status.Canceled ? "active" : "")"
                        onclick="window.location.href='?status=Canceled'">Canceled
                </button>
            </div>

            <!-- Orders List -->
            @if (Model.Data.Orders.Any())
            {
                @foreach (var item in Model.Data.Orders)
                {
                    var total = item.OrderedProducts.Sum(o => o.Quantity * o.Product.Price);
                    var status = item.Status;
                    var dateOfCreation = item.Created;
                    <div class="order-card" data-id="@item.Id">
                        <div class="order-header">
                            <div>
                                <span class="order-id">Order #@item.Id</span>
                                <span class="order-date"> - Placed on @dateOfCreation.ToString("MMMM dd, yyyy")</span>
                            </div>
                            <span
                                class="order-status status-@status.ToString().ToLower()">@(status == Status.InProgress ? "In Progress" : status.ToString())</span>
                        </div>

                        <div class="order-details">
                            <div class="order-items">
                                @foreach (var orderedProduct in item.OrderedProducts)
                                {
                                    <div class="order-item" data-id="@orderedProduct.Product.Id"
                                         data-quantity="@orderedProduct.Quantity">
                                        <img src="@orderedProduct.Product.ImagePath" alt="" class="order-item-img">
                                        <div>
                                            <h4>@orderedProduct.Product.Name</h4>
                                            <p>Quantity: @orderedProduct.Quantity</p>
                                            <p>
                                                $@($"{orderedProduct.Product.Price:f2}")@(orderedProduct.Quantity > 1 ? " each" : "")</p>
                                        </div>
                                    </div>
                                }
                            </div>

                            <div class="order-summary">
                                <div class="summary-row">
                                    <span>Subtotal:</span>
                                    <span>$@($"{(double)total * 0.8:f2}")</span>
                                </div>
                                <div class="summary-row">
                                    <span>Shipping:</span>
                                    <span>$@(total <= 100 ? "10.00" : "Free")</span>
                                </div>
                                <div class="summary-row">
                                    <span>Tax:</span>
                                    <span>$@($"{(double)total * 0.2:f2}")</span>
                                </div>
                                <div class="summary-row" style="font-weight: bold; font-size: 1.1em;">
                                    <span>Total:</span>
                                    <span>$@($"{total:f2}")</span>
                                </div>
                            </div>
                        </div>
                        @{
                            var isVisibleForNotCanceled = status == Status.Canceled ? "d-none" : "";
                        }
                        <div class="order-actions">
                            @if (!item.OrderedProducts.Any(op => op.Quantity > op.Product.Quantity || op.Product.Status != ProductStatus.InStock))
                            {
                                <button name="reorder-btn" class="btn btn-primary">Reorder</button>
                            }
                            <a asp-action="Create" asp-controller="Feedbacks"
                               class="btn btn-secondary @isVisibleForNotCanceled">Leave Review</a>
                            <button name="cancel-btn"
                                    class="btn btn-secondary @(status != Status.InProgress && status != Status.Confirmed ? "d-none" : "")">
                                Cancel Order
                            </button>
                            <a href="mailto:support@giftshob.bg" class="btn btn-secondary @isVisibleForNotCanceled">Contact
                                Support</a>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-orders">
                    <i class="fas fa-box-open"></i>
                    <h3>No orders found</h3>
                    <p>You haven't placed any
                        orders @(Model.Data.SelectedStatus != null ? "with this status" : "yet")</p>
                    <a href="/Shop" class="btn btn-primary" style="margin-top: 20px;">Start Shopping</a>
                </div>
            }

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <div class="pagination" style="display: flex; justify-content: center; margin-top: 30px; gap: 10px;">
                    @if (Model.CurrentPage > 1)
                    {
                        <a href="?index=@(Model.CurrentPage - 1)&status=@Model.Data.SelectedStatus"
                           class="btn btn-secondary">
                            <i style="margin-right: 0.5rem" class="fas fa-chevron-left"></i> Previous
                        </a>
                    }

                    @for (var i = 1; i <= Model.TotalPages; i++)
                    {
                        <a href="?index=@i&status=@Model.Data.SelectedStatus"
                           class="btn @(i == Model.CurrentPage ? "btn-primary" : "btn-secondary")">@i</a>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)
                    {
                        <a href="?index=@(Model.CurrentPage + 1)&status=@Model.Data.SelectedStatus"
                           class="btn btn-secondary">
                            Next <i style="margin-left: 0.5rem" class="fas fa-chevron-right"></i>
                        </a>
                    }
                </div>
            }

        </main>
    </div>
</div>

<script src="~/js/order.js">

</script>


@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
}
</body>
</html>
